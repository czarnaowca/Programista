import json
import sys


def load_results(file_name):
    """
    Loads results from file to JSON object
    :param file_name: JSON file
    :return: JSON
    """
    with open(file_name, "r") as json_file:
        return json.load(json_file)


def parse_detection(results):
    """
    Parse JSON results of detection and prints defined output
    :param results: JSON object
    :return: None
    """
    attr = "attributes"
    print(f"[+] JARM signature: "
          f"{results[attr]['jarm']}")
    print("[+] Last analysis stats:")
    print(f"\tHarmless: "
          f"{results[attr]['last_analysis_stats']['harmless']}")
    print(f"\tMalicious: "
          f"{results[attr]['last_analysis_stats']['malicious']}")
    print(f"\tSuspicious: "
          f"{results[attr]['last_analysis_stats']['suspicious']}")
    print(f"\tUndetected: "
          f"{results[attr]['last_analysis_stats']['undetected']}")
    print(f"[+] VT link: {results['links']['self']}")


def parse_collections(results):
    """
    Parse JSON results of collections and prints defined output
    :param results: JSON object
    :return: None
    """
    attr = "attributes"
    for coll_no, collection in enumerate(results):
        print(f"{coll_no + 1}:")
        print(f"\tName: {collection[attr]['name']}")
        print(f"\tAlternative names: "
              f"{collection[attr]['alt_names']}")
        print(f"\tURLs count: "
              f"{collection[attr]['urls_count']}")
        print(f"\tFiles count: "
              f"{collection[attr]['files_count']}")
        print(f"\tTargeted industries:"
              f" {collection[attr]['targeted_industries']}")
        print(f"\tTargeted countries:"
              f" {collection[attr]['targeted_countries']}")
        print(f"\tTags: "
              f"{collection[attr]['autogenerated_tags']}")


if __name__ == "__main__":
    detection_content = load_results(sys.argv[1])
    parse_detection(detection_content)
    collections_content = load_results(sys.argv[2])
    parse_collections(collections_content)
